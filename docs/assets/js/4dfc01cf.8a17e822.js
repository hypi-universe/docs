"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8662],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return c}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(a),c=r,h=m["".concat(d,".").concat(c)]||m[c]||s[c]||l;return a?n.createElement(h,i(i({ref:t},u),{},{components:a})):n.createElement(h,i({ref:t},u))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},21332:function(e,t,a){var n=a(67294);t.Z=function(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},8515:function(e,t,a){a.d(t,{Z:function(){return u}});var n=a(87462),r=a(67294),l=a(72389),i=a(35394),o=a(86010),d="tabItem_tAz6";function p(e){var t,a,l,p=e.lazy,u=e.block,s=e.defaultValue,m=e.values,c=e.groupId,h=e.className,k=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=m?m:k.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),g=(0,i.lx)(f,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var N=null===s?s:null!=(t=null!=s?s:null==(a=k.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(l=k[0])?void 0:l.props.value;if(null!==N&&!f.some((function(e){return e.value===N})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+N+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=(0,i.UB)(),v=b.tabGroupChoices,y=b.setTabGroupChoices,w=(0,r.useState)(N),T=w[0],C=w[1],j=[],D=(0,i.o5)().blockElementScrollPositionUntilNextRender;if(null!=c){var E=v[c];null!=E&&E!==T&&f.some((function(e){return e.value===E}))&&C(E)}var R=function(e){var t=e.currentTarget,a=j.indexOf(t),n=f[a].value;n!==T&&(D(t),C(n),null!=c&&y(c,n))},x=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=j.indexOf(e.currentTarget)+1;a=j[n]||j[0];break;case"ArrowLeft":var r=j.indexOf(e.currentTarget)-1;a=j[r]||j[j.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":u},h)},f.map((function(e){var t=e.value,a=e.label,l=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return j.push(e)},onKeyDown:x,onFocus:R,onClick:R},l,{className:(0,o.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":T===t})}),null!=a?a:t)}))),p?(0,r.cloneElement)(k.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},k.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function u(e){var t=(0,l.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},87101:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return p},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return m},default:function(){return h}});var n=a(87462),r=a(63366),l=(a(67294),a(3905)),i=a(8515),o=a(21332),d=["components"],p={id:"readdata",title:"Read Data",sidebar_label:"Read Data",slug:"/lowcode/read-data"},u=void 0,s={unversionedId:"lowcode/readdata",id:"lowcode/readdata",title:"Read Data",description:"Read the inserted data by using query functions. get and find are the two functions that return the data. If you need a single record, use the get function. For getting multiple records, use the find function.",source:"@site/content/lowcode/readdata.md",sourceDirName:"lowcode",slug:"/lowcode/read-data",permalink:"/docs/lowcode/read-data",editUrl:"https://github.com/hypi-universe/docs/edit/master/content/lowcode/readdata.md",tags:[],version:"current",frontMatter:{id:"readdata",title:"Read Data",sidebar_label:"Read Data",slug:"/lowcode/read-data"},sidebar:"docs",previous:{title:"Update Data",permalink:"/docs/lowcode/update-data"},next:{title:"Delete Data",permalink:"/docs/lowcode/delete-data"}},m=[{value:"Get",id:"get",children:[],level:2},{value:"Find",id:"find",children:[{value:"Pagination",id:"pagination",children:[],level:3}],level:2}],c={toc:m};function h(e){var t=e.components,a=(0,r.Z)(e,d);return(0,l.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Read the inserted data by using query functions. ",(0,l.kt)("inlineCode",{parentName:"p"},"get")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"find")," are the two functions that return the data. If you need a single record, use the ",(0,l.kt)("inlineCode",{parentName:"p"},"get")," function. For getting multiple records, use the ",(0,l.kt)("inlineCode",{parentName:"p"},"find")," function."),(0,l.kt)("h2",{id:"get"},"Get"),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"get")," function returns a single record using the \u2018id\u2019 of an object. You may use the \u2018id\u2019 received after creating the record. The ",(0,l.kt)("a",{parentName:"p",href:"/docs/lowcode/magic-hypi-object"},"magic hypi object")," also contains the \u2018id\u2019 of the object (",(0,l.kt)("inlineCode",{parentName:"p"},"hypi.id"),")."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"get(type:\xa0HypiMutationType!, id:\xa0String!):\xa0HypiRootAggregate\n")),(0,l.kt)("p",null,"Let\u2019s pass the ",(0,l.kt)("inlineCode",{parentName:"p"},"Author")," data type as an argument to fetch the data. Get the records in the fields like name, booklist, hypi id, created date, updated date. You can get titles and availability of books from the array booklist. You may use the fields from which you want to fetch the data."),(0,l.kt)(i.Z,{defaultValue:"query",values:[{label:"GraphQL Query",value:"query"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"query",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'{\n  get(type: Author, id: "01F0DVHM26HHWS8X8X3NBRSAV6"){\n    ... on Author {\n      hypi{\n        id\n        created\n        updated\n      }\n      name\n      booklist{\n        title\n        available\n      }\n    }\n  }\n}\n'))),(0,l.kt)(o.Z,{value:"response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "get": {\n      "hypi": {\n        "id": "01F0DVHM26HHWS8X8X3NBRSAV6"\n      },\n      "name": "Dan Brown",\n      "booklist": [\n        {\n          "title": "Da Vinci Code",\n          "available": true\n        },\n        {\n          "title": "The Last Symbol",\n          "available": false\n        },\n        {\n          "title": "Inferno",\n          "available": true\n        }\n      ]\n    }\n  }\n}\n')))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"find"},"Find"),(0,l.kt)("p",null,"The second approach to getting data out of an instance is by using the",(0,l.kt)("inlineCode",{parentName:"p"},"find"),"\xa0\nfunction. Unlike the\xa0",(0,l.kt)("inlineCode",{parentName:"p"},"get"),"\xa0function, this returns a list of objects matching the arcql filter provided."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"find(\n    type:\xa0HypiMutationType!\n    arcql:\xa0String!\n    first:\xa0Int\n    after:\xa0String\n    last:\xa0Int\n    before:\xa0String\n    includeTrashed:\xa0Boolean\n):\xa0HypiFilterConnection!\n")),(0,l.kt)("p",null,"This function has many parameters. Let\u2019s look at this table to understand them."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"Parameter")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"Description")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"Example")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},"The type (table) to find data from"),(0,l.kt)("td",{parentName:"tr",align:null},"Message, Author")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"arcql")),(0,l.kt)("td",{parentName:"tr",align:null},"Query to filter the data"),(0,l.kt)("td",{parentName:"tr",align:null},"arcql: \"hypi.id= '01F0FW9XYQWQNNEDYV3S5P2WGQ'\"")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"first")),(0,l.kt)("td",{parentName:"tr",align:null},"Limit the number of records in the              results. Used with the \u2018after\u2019 parameter."),(0,l.kt)("td",{parentName:"tr",align:null},"12")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"after")),(0,l.kt)("td",{parentName:"tr",align:null},"Return records after an object with this ID"),(0,l.kt)("td",{parentName:"tr",align:null},"\u201c01F0FW9XYQWQNNEDYV3S5P2WGQ\u201d")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"last")),(0,l.kt)("td",{parentName:"tr",align:null},"Limit the number of records in the              results. Used with the \u2018before\u2019 parameter."),(0,l.kt)("td",{parentName:"tr",align:null},"6")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"before")),(0,l.kt)("td",{parentName:"tr",align:null},"Return records before an object with this ID"),(0,l.kt)("td",{parentName:"tr",align:null},"\u201c01F0FW9XYQWQNNEDYV3S5P2WGQ\u201d")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"page")),(0,l.kt)("td",{parentName:"tr",align:null},"The page number to be returned"),(0,l.kt)("td",{parentName:"tr",align:null},"3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"includeTrashed")),(0,l.kt)("td",{parentName:"tr",align:null},"Display Trashed objects in the                     record. \u2018false\u2019 by default"),(0,l.kt)("td",{parentName:"tr",align:null},"False")))),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u2018first\u2019 and \u2018after\u2019 parameters work together. \u2018last\u2019 and \u2018before\u2019 work together.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u2018first\u2019 and \u2018last\u2019 are the limits i.e. the max results to return (up to 25)")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u2018before\u2019 and \u2018after\u2019 are the ID of objects to return results before or after.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If \u2018before\u2019 is set, then results matching the arcql query are returned before this id")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"If \u2018after\u2019 is set, then results matching the arcql query are returned after this id")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u2018includeTrashed\u2019 is false by default. \u2018find\u2019 does not return the objects which were trashed using the \u2018trash\u2019 function. But if you set this parameter to true or use the untrash method then \u2018find\u2019 returns those objects.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"'page' number works with the ",(0,l.kt)("inlineCode",{parentName:"p"},"first")," parameter. If this parameter is specified, then the records get divided into pages. Each page has the number of rows specified by the ",(0,l.kt)("inlineCode",{parentName:"p"},"first")," parameter. "))),(0,l.kt)("p",null,"Let\u2019s check the below example. Records from an ",(0,l.kt)("inlineCode",{parentName:"p"},"Author")," object are received using the ",(0,l.kt)("inlineCode",{parentName:"p"},"find")," function. Records of Hypi IDs, updated date, name of the authors, and count of books are returned."),(0,l.kt)(i.Z,{defaultValue:"query",values:[{label:"GraphQL Query",value:"query"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"query",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},"{  \n   find (\n        type: Author, \n        arcql: \"hypi.id = '01F0DVHM2AZCGM0JSR9QRNBWZY'\"\n   ) \n   {\n    edges {\n      cursor\n      node {\n        ... on Author {\n          hypi {\n            id\n            updated\n          }\n          name\n          count\n        }\n      }\n    }\n  }\n}\n"))),(0,l.kt)(o.Z,{value:"response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "find": {\n      "edges": [\n        {\n          "cursor": "01F0DVHM2AZCGM0JSR9QRNBWZY",\n          "node": {\n            "hypi": {\n              "id": "01F0DVHM2AZCGM0JSR9QRNBWZY",\n              "updated": "2021-03-10T10:58:59Z"\n            },\n            "name": "Paulo Coelho",\n            "count": 30\n          }\n        }\n      ]\n    }\n  }\n}\n')))),(0,l.kt)("h3",{id:"pagination"},"Pagination"),(0,l.kt)("p",null,"Let's see how the pagination works while retrieving the records.  A ",(0,l.kt)("inlineCode",{parentName:"p"},"page")," has a specific number of rows (",(0,l.kt)("inlineCode",{parentName:"p"},"first"),"). The total number of records get divided by the number of rows to get the number of pages. If the ",(0,l.kt)("inlineCode",{parentName:"p"},"page")," parameter has the value of ",(0,l.kt)("inlineCode",{parentName:"p"},"n")," (integer), the ",(0,l.kt)("inlineCode",{parentName:"p"},"nth")," page gets displayed in the result of  the ",(0,l.kt)("inlineCode",{parentName:"p"},"find")," function."),(0,l.kt)("p",null,"Suppose the ",(0,l.kt)("inlineCode",{parentName:"p"},"book")," object has the following records. The ",(0,l.kt)("inlineCode",{parentName:"p"},"after")," parameter has the ",(0,l.kt)("inlineCode",{parentName:"p"},"hypi.id")," value of the book alchemist. The pagination starts after the Alchemist record.  Let's say each page has two books (",(0,l.kt)("inlineCode",{parentName:"p"},"first")," parameter). So, the remaining records after Alchemist get divided into two records each. The table shows the page number of each record."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"Book")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"Page No")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"The Last Symbol"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Alchemist ( ",(0,l.kt)("strong",{parentName:"td"},"after")," Parameter)"),(0,l.kt)("td",{parentName:"tr",align:null},"-")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"In the wonderland of Investment"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Ikigai"),(0,l.kt)("td",{parentName:"tr",align:null},"1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Outlook"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Blink"),(0,l.kt)("td",{parentName:"tr",align:null},"2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"History of nearly everything"),(0,l.kt)("td",{parentName:"tr",align:null},"3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Sapiens"),(0,l.kt)("td",{parentName:"tr",align:null},"3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Hamlet"),(0,l.kt)("td",{parentName:"tr",align:null},"4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Merchant of Venice"),(0,l.kt)("td",{parentName:"tr",align:null},"4")))),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},(0,l.kt)("inlineCode",{parentName:"p"},"page")," parameter doesn't work with the ",(0,l.kt)("inlineCode",{parentName:"p"},"before")," parameter."))),(0,l.kt)("p",null," Let's retrieve ",(0,l.kt)("inlineCode",{parentName:"p"},"page")," ",(0,l.kt)("strong",{parentName:"p"},"3")," after the alchemist record. Here is the query."),(0,l.kt)(i.Z,{defaultValue:"query",values:[{label:"GraphQL Query",value:"query"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,l.kt)(o.Z,{value:"query",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-java"},'{\n  find(type: Book, arcql: "*", first: 2, after:"01F6EFAYAX79ZG3Q13WGXKDAR5", page:3) {\n    edges {\n      node {\n        ... on Book {\n         title\n          \n        }\n      }\n      cursor\n    }\n  }\n}\n'))),(0,l.kt)(o.Z,{value:"response",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "find": {\n      "edges": [\n        {\n          "node": {\n            "title": "History of nearly everything"\n          },\n          "cursor": "01F6EFAYBSDNHTHVQRGJRDJPPK"\n        },\n        {\n          "node": {\n            "title": "Sapiens"\n          },\n          "cursor": "01F6EFAYBXQPRTJFB1K5QE29SM"\n        }\n      ]\n    }\n  }\n}\n')))),(0,l.kt)("p",null,"If the ",(0,l.kt)("inlineCode",{parentName:"p"},"after")," parameter has not been specified, the pagination begins from the first record."),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Read More...")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("ul",{parentName:"div"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://hypi.dev/t/how-to-read-data-from-a-single-record/112"},"How to read data from a single record")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://hypi.dev/t/how-to-read-data-from-multiple-records-objects/111"},"How to read data from multiple records/objects")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://hypi.dev/t/how-to-retrieve-records-using-pagination/244"},"How to retrieve records using pagination")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://hypi.dev/t/find-data-using-lowcode-arcql-filters-with-hypi/287"},"Find data using lowcode ArcQL filters with Hypi"))))))}h.isMDXComponent=!0}}]);