"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Welcome","items":[{"type":"link","label":"Introduction","href":"/docs/","docId":"hypi-tink-intro"},{"type":"link","label":"Overview","href":"/docs/hypi-tink-overview","docId":"hypi-tink-overview"},{"type":"link","label":"Get Started","href":"/docs/hypi-tink-get-started","docId":"hypi-tink-get-started"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Mood Board","items":[{"type":"link","label":"Overview","href":"/docs/hypi-tink-mood","docId":"hypi-tink-mood"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Stories Board","items":[{"type":"link","label":"Overview","href":"/docs/hypi-tink-stories","docId":"hypi-tink-stories"},{"type":"link","label":"Users","href":"/docs/stories-users","docId":"stories-users"},{"type":"link","label":"Action","href":"/docs/stories-action","docId":"stories-action"},{"type":"link","label":"Outcome","href":"/docs/stories-outcome","docId":"stories-outcome"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Data Tables","items":[{"type":"link","label":"Overview","href":"/docs/stories-data-tables","docId":"stories-data-tables"},{"type":"link","label":"Tables","href":"/docs/data-tables","docId":"data-tables"},{"type":"link","label":"Versions","href":"/docs/data-tables-versions","docId":"data-tables-versions"},{"type":"link","label":"Environment","href":"/docs/data-tables-environment","docId":"data-tables-environment"},{"type":"link","label":"Console","href":"/docs/data-console","docId":"data-console"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Designer Board","items":[{"type":"link","label":"Overview","href":"/docs/hypi-tink-designer","docId":"hypi-tink-designer"},{"type":"link","label":"Screens","href":"/docs/designer-screens","docId":"designer-screens"},{"type":"link","label":"Components","href":"/docs/designer-components","docId":"designer-components"},{"type":"link","label":"Widgets","href":"/docs/designer-widgets","docId":"designer-widgets"},{"type":"link","label":"Assets","href":"/docs/designer-assets","docId":"designer-assets"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Widget","items":[{"type":"link","label":"Widget Groups","href":"/docs/widget-groups","docId":"widget-groups"},{"type":"link","label":"Basic Widgets","href":"/docs/widget-basic","docId":"widget-basic"},{"type":"link","label":"Layout Widgets","href":"/docs/widget-layout","docId":"widget-layout"},{"type":"link","label":"Forms","href":"/docs/widget-forms","docId":"widget-forms"},{"type":"link","label":"Advance","href":"/docs/widget-advance","docId":"widget-advance"},{"type":"link","label":"List","href":"/docs/widget-list-view","docId":"widget-list-view"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Widget Properties","items":[{"type":"link","label":"Common","href":"/docs/widget-properties","docId":"widget-properties"},{"type":"link","label":"Column / Row / Flex","href":"/docs/properties-column-row","docId":"properties-column-row"},{"type":"link","label":"Text","href":"/docs/properties-text","docId":"properties-text"},{"type":"link","label":"Container","href":"/docs/properties-container","docId":"properties-container"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Logic","items":[{"type":"link","label":"Logic","href":"/docs/designer-logic","docId":"designer-logic"},{"type":"link","label":"Output and Attribute Binding","href":"/docs/logic-output-binding","docId":"logic-output-binding"},{"type":"link","label":"Input and Attribute Binding","href":"/docs/logic-input-binding","docId":"logic-input-binding"}],"collapsible":true,"collapsed":true},{"type":"link","label":"Glossary","href":"/docs/hypi-tink-glossary","docId":"hypi-tink-glossary"},{"type":"category","label":"Lowcode","items":[{"type":"link","label":"Introduction","href":"/docs/lowcode/","docId":"lowcode/introduction"},{"type":"link","label":"Hypi Overview","href":"/docs/lowcode/overview","docId":"lowcode/overview"},{"type":"link","label":"Get Started","href":"/docs/lowcode/get-started","docId":"lowcode/get-started"},{"type":"link","label":"Hypi FAQs","href":"/docs/lowcode/faq","docId":"lowcode/faq"},{"type":"category","label":"API & References","items":[{"type":"link","label":"Overview","href":"/docs/lowcode/api-references","docId":"lowcode/api-references"},{"type":"link","label":"API Set-Up","href":"/docs/lowcode/apisetup","docId":"lowcode/apisetup"},{"type":"link","label":"Authentication","href":"/docs/lowcode/authentication","docId":"lowcode/authentication"},{"type":"link","label":"Scalars","href":"/docs/lowcode/scalars","docId":"lowcode/scalars"},{"type":"link","label":"Magic Hypi Object","href":"/docs/lowcode/magic-hypi-object","docId":"lowcode/hypiobject"},{"type":"link","label":"CRUD APIs","href":"/docs/lowcode/crud","docId":"lowcode/crud"},{"type":"link","label":"Create Data","href":"/docs/lowcode/create-data","docId":"lowcode/createdata"},{"type":"link","label":"Update Data","href":"/docs/lowcode/update-data","docId":"lowcode/updatedata"},{"type":"link","label":"Read Data","href":"/docs/lowcode/read-data","docId":"lowcode/readdata"},{"type":"link","label":"Delete Data","href":"/docs/lowcode/delete-data","docId":"lowcode/deletedata"},{"type":"link","label":"ArcQL filtering","href":"/docs/lowcode/arcql","docId":"lowcode/arcql"},{"type":"link","label":"References","href":"/docs/lowcode/references","docId":"lowcode/references"},{"type":"link","label":"Authorisation","href":"/docs/lowcode/authorisation","docId":"lowcode/authorisation"},{"type":"link","label":"Realtime database","href":"/docs/lowcode/realtime-db","docId":"lowcode/realtime-db"},{"type":"link","label":"API gateway","href":"/docs/lowcode/apigateway","docId":"lowcode/apigateway"},{"type":"link","label":"Aggregation","href":"/docs/lowcode/aggregation","docId":"lowcode/aggregation"},{"type":"link","label":"Maths APIs","href":"/docs/lowcode/maths-api","docId":"lowcode/mathsapi"},{"type":"link","label":"Hypi Directives","href":"/docs/lowcode/hypi-directives","docId":"lowcode/hypi-directives"},{"type":"link","label":"Undo / Redo APIs","href":"/docs/lowcode/undo-redo","docId":"lowcode/undo-redo"},{"type":"link","label":"User Defined Functions","href":"/docs/lowcode/user-defined-function","docId":"lowcode/userdefinedfunctions"},{"type":"link","label":"Triggers","href":"/docs/lowcode/triggers","docId":"lowcode/triggers"},{"type":"link","label":"ScheduledFunction","href":"/docs/scheduled-function","docId":"lowcode/scheduled-function"},{"type":"link","label":"Webhooks","href":"/docs/lowcode/webhooks","docId":"lowcode/webhooks"},{"type":"link","label":"File Upload","href":"/docs/lowcode/fileupload","docId":"lowcode/fileupload"},{"type":"link","label":"RESTful APIs","href":"/docs/lowcode/rest-apis","docId":"lowcode/rest-apis"},{"type":"link","label":"OAuth2 Login","href":"/docs/lowcode/oauth2login","docId":"lowcode/oauth2login"},{"type":"link","label":"Password Reminder","href":"/docs/lowcode/password-reminder","docId":"lowcode/password-reminder"},{"type":"link","label":"API Rate Limits","href":"/docs/lowcode/api-rate-limits","docId":"lowcode/api-rate-limits"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Serverless","items":[{"type":"link","label":"Overview","href":"/docs/lowcode/serverless","docId":"lowcode/serverless"},{"type":"link","label":"OpenWhisk CLI","href":"/docs/lowcode/openwhisk-cli","docId":"lowcode/openwhisk-cli"},{"type":"link","label":"Create Serverless Function","href":"/docs/lowcode/create-serverless","docId":"lowcode/create-serverless"},{"type":"link","label":"Use Serverless Function","href":"/docs/lowcode/use-serverless","docId":"lowcode/use-serverless"},{"type":"link","label":"OpenWhisk Actions","href":"/docs/lowcode/openwhisk-actions","docId":"lowcode/openwhisk-actions"},{"type":"link","label":"Parameters","href":"/docs/lowcode/openwhisk-parameters","docId":"lowcode/openwhisk-parameters"},{"type":"link","label":"Annotations","href":"/docs/lowcode/openwhisk-annotations","docId":"lowcode/openwhisk-annotations"},{"type":"link","label":"Triggers and Rules","href":"/docs/lowcode/openwhisk-triggers","docId":"lowcode/openwhisk-triggers"},{"type":"link","label":"Action Sequences","href":"/docs/lowcode/openwhisk-sequences","docId":"lowcode/openwhisk-sequences"},{"type":"link","label":"Conductors","href":"/docs/lowcode/openwhisk-conductors","docId":"lowcode/openwhisk-conductors"},{"type":"link","label":"Packages","href":"/docs/lowcode/openwhisk-packages","docId":"lowcode/openwhisk-packages"},{"type":"link","label":"Web Actions","href":"/docs/lowcode/openwhisk-webactions","docId":"lowcode/openwhisk-webactions"},{"type":"link","label":"Alarm Package","href":"/docs/lowcode/openwhisk-alarms","docId":"lowcode/openwhisk-alarms"},{"type":"link","label":"Slack Package","href":"/docs/lowcode/openwhisk-slack","docId":"lowcode/openwhisk-slack"},{"type":"link","label":"WebSocket Package","href":"/docs/lowcode/openwhisk-websocket","docId":"lowcode/openwhisk-websocket"},{"type":"link","label":"GitHub Package","href":"/docs/lowcode/openwhisk-github","docId":"lowcode/openwhisk-github"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Serverless: Language Support","items":[{"type":"link","label":"JavaScript actions","href":"/docs/lowcode/actions-nodejs","docId":"lowcode/actions-nodejs"},{"type":"link","label":"Python actions","href":"/docs/lowcode/actions-python","docId":"lowcode/actions-python"},{"type":"link","label":"Java actions","href":"/docs/lowcode/actions-java","docId":"lowcode/actions-java"},{"type":"link","label":"Swift actions","href":"/docs/lowcode/actions-swift","docId":"lowcode/actions-swift"},{"type":"link","label":"Go actions","href":"/docs/lowcode/actions-go","docId":"lowcode/actions-go"},{"type":"link","label":"PHP actions","href":"/docs/lowcode/actions-php","docId":"lowcode/actions-php"},{"type":"link","label":"Ruby actions","href":"/docs/lowcode/actions-ruby","docId":"lowcode/actions-ruby"},{"type":"link","label":"Rust actions","href":"/docs/lowcode/actions-rust","docId":"lowcode/actions-rust"},{"type":"link","label":".NET actions","href":"/docs/lowcode/actions-dotnet","docId":"lowcode/actions-dotnet"},{"type":"link","label":"Docker actions","href":"/docs/lowcode/actions-docker","docId":"lowcode/actions-docker"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Serverless: Client Libraries","items":[{"type":"link","label":"NodeJS","href":"/docs/nodejs-client-library","docId":"lowcode/nodejs-client-library"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Hypi CLI","items":[{"type":"link","label":"Hypi CLI Overview","href":"/docs/lowcode/hypi-cli-intro","docId":"lowcode/hypi-cli-intro"},{"type":"link","label":"Flutter","href":"/docs/lowcode/hypi-cli-flutter","docId":"lowcode/hypi-cli-flutter"},{"type":"link","label":"ReactJS","href":"/docs/lowcode/hypi-cli-react","docId":"lowcode/hypi-cli-react"},{"type":"link","label":"Angular","href":"/docs/lowcode/hypi-cli-angular","docId":"lowcode/hypi-cli-angular"},{"type":"link","label":"VueJS Composition","href":"/docs/lowcode/hypi-cli-vuejs-composition","docId":"lowcode/hypi-cli-vuejs-composition"},{"type":"link","label":"VueJS Smart Queries","href":"/docs/lowcode/hypi-cli-vuejs-smartqueries","docId":"lowcode/hypi-cli-vuejs-smartqueries"}],"collapsible":true,"collapsed":true},{"type":"category","label":"GraphQL","items":[{"type":"link","label":"GraphQL Overview","href":"/docs/lowcode/graphql","docId":"lowcode/graphql"},{"type":"link","label":"GraphQL Introduction","href":"/docs/lowcode/gql-introduction","docId":"lowcode/gql-introduction"},{"type":"link","label":"GraphQL Schema and Types","href":"/docs/lowcode/gql-schema-types","docId":"lowcode/gql-schema-types"},{"type":"link","label":"GraphQL Queries","href":"/docs/lowcode/gql-queries","docId":"lowcode/gql-queries"},{"type":"link","label":"GraphQL Mutations","href":"/docs/lowcode/gql-mutations","docId":"lowcode/gql-mutations"},{"type":"link","label":"GraphQL Interfaces","href":"/docs/lowcode/gql-interfaces","docId":"lowcode/gql-interfaces"}],"collapsible":true,"collapsed":true},{"type":"category","label":"System Apps","items":[{"type":"link","label":"Core","href":"/docs/lowcode/core","docId":"lowcode/core"}],"collapsible":true,"collapsed":true},{"type":"category","label":"Example Apps","items":[{"type":"link","label":"ReactJS","href":"/docs/lowcode/react-todo-app","docId":"lowcode/react-todo-app"}],"collapsible":true,"collapsed":true},{"type":"link","label":"Hypi + Angular","href":"/docs/lowcode/hypi-angular","docId":"lowcode/hypi-angular"},{"type":"category","label":"Tutorial","items":[{"type":"link","label":"Tutorials Overview","href":"/docs/lowcode/tutorials","docId":"lowcode/tutorials"},{"type":"link","label":"Hypi GraphQL CRUD Tutorial","href":"/docs/lowcode/gql-crud-tutorial","docId":"lowcode/gql-crud-tutorial"},{"type":"link","label":"Timeseries Aggregations with Date Granularity","href":"/docs/lowcode/time-series-aggregations","docId":"lowcode/time-series-aggregations"}],"collapsible":true,"collapsed":true},{"type":"category","label":"User Interface Guide","items":[{"type":"link","label":"Create App","href":"/docs/lowcode/ui-create-app","docId":"lowcode/ui-create-app"},{"type":"link","label":"Create Release","href":"/docs/lowcode/ui-create-release","docId":"lowcode/ui-create-release"},{"type":"link","label":"Create a table using Visual Builder","href":"/docs/lowcode/ui-create-table-vb","docId":"lowcode/ui-create-table-vb"},{"type":"link","label":"Create a table using GraphQL Schema Editor","href":"/docs/lowcode/ui-create-table-gse","docId":"lowcode/ui-create-table-gse"},{"type":"link","label":"Add Environment Variables","href":"/docs/lowcode/ui-add-environment-var","docId":"lowcode/ui-add-environment-var"},{"type":"link","label":"Add Dependencies","href":"/docs/lowcode/ui-add-dependencies","docId":"lowcode/ui-add-dependencies"},{"type":"link","label":"Publish / Deprecate Release","href":"/docs/lowcode/ui-deprecate-publish","docId":"lowcode/ui-deprecate-publish"},{"type":"link","label":"Create Instance","href":"/docs/lowcode/ui-create-instance","docId":"lowcode/ui-create-instance"},{"type":"link","label":"View Instance","href":"/docs/lowcode/ui-view-instance","docId":"lowcode/ui-view-instance"},{"type":"link","label":"API configurations of an Instance","href":"/docs/lowcode/ui-instance-api-config","docId":"lowcode/ui-instance-api-config"},{"type":"link","label":"GraphQL configuration of an Instance","href":"/docs/lowcode/ui-gql-config","docId":"lowcode/ui-gql-config"},{"type":"link","label":"GraphQL Playground","href":"/docs/lowcode/ui-gql-playground","docId":"lowcode/ui-gql-playground"},{"type":"link","label":"Data Migration","href":"/docs/lowcode/ui-data-migration","docId":"lowcode/ui-data-migration"},{"type":"link","label":"Real-time Input Streams","href":"/docs/lowcode/ui-real-time-streams","docId":"lowcode/ui-real-time-streams"}],"collapsible":true,"collapsed":true},{"type":"link","label":"Glossary","href":"/docs/lowcode/glossary","docId":"lowcode/glossary"}],"collapsible":true,"collapsed":true},{"type":"link","label":"Get Involved!","href":"/docs/lowcode/get-involved","docId":"lowcode/get-involved"}]},"docs":{"data-console":{"id":"data-console","title":"Console","description":"Console leads to Hypi\'s low code backend. With Hypi\'s low code backend, you will have access to various APIs to control the data operations of your application.","sidebar":"docs"},"data-tables":{"id":"data-tables","title":"Tables","description":"1. Click Database Icon on the top right corner of  the Stories board to add Tables.","sidebar":"docs"},"data-tables-environment":{"id":"data-tables-environment","title":"Environment","description":"1. An instance is an isolated copy of your app. Data stored in the database at a particular time is called an instance of a database. Think of an app as a template and an instance as a deployed version of that template. A release may have one or more instances. To create an instance click + under the Environment.","sidebar":"docs"},"data-tables-versions":{"id":"data-tables-versions","title":"Versions","description":"1. You may create independent releases for different stages of the Software Development Life Cycle. Click the + button under the Versionsto create a new release or version. By default, the first release would be an internal release.","sidebar":"docs"},"designer-assets":{"id":"designer-assets","title":"Assets","description":"Assets are the resources like images, videos, files to be placed on the screen. You can reuse the assets on various screens. For example, you may want to place your company logo on different screens or applications.","sidebar":"docs"},"designer-components":{"id":"designer-components","title":"Components","description":"A Component is the reusable part of a screen. You can design components of various sizes and place them on different screens.","sidebar":"docs"},"designer-logic":{"id":"designer-logic","title":"Logic","description":"Logic facilitates the transfer of data from one widget to another.","sidebar":"docs"},"designer-screens":{"id":"designer-screens","title":"Screens","description":"Using Hypi Tink, you can create, test, deploy apps from a single platform. Hypi Tink supports deploying Apps to multiple devices with various screen sizes.","sidebar":"docs"},"designer-widgets":{"id":"designer-widgets","title":"Widgets","description":"Widget is an important element of interaction on the User Interface. You can use widgets like Buttons, Text, Icons, Lists, Dropdowns to customize the screen.","sidebar":"docs"},"hypi-tink-designer":{"id":"hypi-tink-designer","title":"Designer Board - Overview","description":"Designer Board is the most important board of Hypi Tink. Using Designer, you can","sidebar":"docs"},"hypi-tink-get-started":{"id":"hypi-tink-get-started","title":"Get Started","description":"Here is a quick guide to get started with Hypi Tink!","sidebar":"docs"},"hypi-tink-glossary":{"id":"hypi-tink-glossary","title":"Glossary","description":"Action: User performs an Action to use the application features","sidebar":"docs"},"hypi-tink-intro":{"id":"hypi-tink-intro","title":"Welcome to Hypi Tink!","description":"Build Apps faster in Visual and No Code way - Simply use Hypi Tink!","sidebar":"docs"},"hypi-tink-mood":{"id":"hypi-tink-mood","title":"Mood Board - Overview","description":"The Mood board of Tink saves useful resources like Images, Videos, Web Links, etc. You can connect with your team to discuss these resources. It also assists to determine the colour scheme of the screens and their components.","sidebar":"docs"},"hypi-tink-overview":{"id":"hypi-tink-overview","title":"Overview","description":"Hypi Tink has three boards that offer various features; Mood, Stories , and Designer. When you create a project on Hypi Tink, these boards are automatically created.","sidebar":"docs"},"hypi-tink-stories":{"id":"hypi-tink-stories","title":"Stories Board","description":"User Stories capture end-user perspectives of using an Application.","sidebar":"docs"},"logic-input-binding":{"id":"logic-input-binding","title":"Input and Attribute Binding","description":"Using Input and Attribute Binding, you can change the attribute value of a widget when the Variable value changes.","sidebar":"docs"},"logic-output-binding":{"id":"logic-output-binding","title":"Output and Attribute Binding","description":"Using Output and Attribute binding, you can save the data in a variable as an output of an event.","sidebar":"docs"},"lowcode/actions-docker":{"id":"lowcode/actions-docker","title":"Docker actions","description":"Apache OpenWhisk supports using custom Docker images as the action runtime. Custom runtimes images can either have the action source files built-in or injected dynamically by the platform during initialisation.","sidebar":"docs"},"lowcode/actions-dotnet":{"id":"lowcode/actions-dotnet","title":".NET actions","description":"OpenWhisk requires a JSON object as output. Hence, serverless function cannot return arrays. It must return an object at the top level which can have arrays inside it.","sidebar":"docs"},"lowcode/actions-go":{"id":"lowcode/actions-go","title":"Go actions","description":"OpenWhisk requires a JSON object as output. Hence, serverless function cannot return arrays. It must return an object at the top level which can have arrays inside it.","sidebar":"docs"},"lowcode/actions-java":{"id":"lowcode/actions-java","title":"Java actions","description":"OpenWhisk requires a JSON object as output. Hence, serverless function cannot return arrays. It must return an object at the top level which can have arrays inside it.","sidebar":"docs"},"lowcode/actions-nodejs":{"id":"lowcode/actions-nodejs","title":"JavaScript actions","description":"OpenWhisk requires a JSON object as output. Hence, serverless function cannot return arrays. It must return an object at the top level which can have arrays inside it.","sidebar":"docs"},"lowcode/actions-php":{"id":"lowcode/actions-php","title":"PHP actions","description":"OpenWhisk requires a JSON object as output. Hence, serverless function cannot return arrays. It must return an object at the top level which can have arrays inside it.","sidebar":"docs"},"lowcode/actions-python":{"id":"lowcode/actions-python","title":"Python actions","description":"OpenWhisk requires a JSON object as output. Hence, serverless function cannot return arrays. It must return an object at the top level which can have arrays inside it.","sidebar":"docs"},"lowcode/actions-ruby":{"id":"lowcode/actions-ruby","title":"Ruby actions","description":"OpenWhisk requires a JSON object as output. Hence, serverless function cannot return arrays. It must return an object at the top level which can have arrays inside it.","sidebar":"docs"},"lowcode/actions-rust":{"id":"lowcode/actions-rust","title":"Rust actions","description":"OpenWhisk requires a JSON object as output. Hence, serverless function cannot return arrays. It must return an object at the top level which can have arrays inside it.","sidebar":"docs"},"lowcode/actions-swift":{"id":"lowcode/actions-swift","title":"Swift actions","description":"OpenWhisk requires a JSON object as output. Hence, serverless function cannot return arrays. It must return an object at the top level which can have arrays inside it.","sidebar":"docs"},"lowcode/aggregation":{"id":"lowcode/aggregation","title":"Aggregation","description":"Aggregation performs a calculation on a set of values and returns a single value. Aggregations are powerful functions. Their results provide insight into the gathered values in the database.","sidebar":"docs"},"lowcode/api-rate-limits":{"id":"lowcode/api-rate-limits","title":"API Rate Limits","description":"API Rate Limits refer to the number of API requests a user can make to the Server within a given period. The Rate Limits vary as per the subscribed plans and the type of requests.","sidebar":"docs"},"lowcode/api-references":{"id":"lowcode/api-references","title":"Overview","description":"Hypi platform tries to include the features most modern applications need to get going quickly. Some of the features of Hypi include the following.","sidebar":"docs"},"lowcode/apigateway":{"id":"lowcode/apigateway","title":"API gateway","description":"Hypi\'s API gateway acts as a middleware that simplifies the integration of your app with other services.","sidebar":"docs"},"lowcode/apisetup":{"id":"lowcode/apisetup","title":"API Set-Up","description":"Hypi is API based platform. You may access Hypi APIs to build various functions for your App.","sidebar":"docs"},"lowcode/arcql":{"id":"lowcode/arcql","title":"ArcQL filtering","description":"Hypi offers a powerful query language as part of its platform. ArcQL works as a filter to select data to process upon. ArcQL statements are used along with query functions like find.You will be able to make your own ArcQL statements as they are easy to construct. ArcQL is very much SQL-like. If you understand SQL, you will write the ArcQL statements just by guessing at it.","sidebar":"docs"},"lowcode/authentication":{"id":"lowcode/authentication","title":"Authentication","description":"Authentication involves verifying the identification of a user. The credentials of the user are matched against the credentials in the database. Users are generally identified with a user id or an email.","sidebar":"docs"},"lowcode/authorisation":{"id":"lowcode/authorisation","title":"Authorisation","description":"Authorisation\xa0is the process of specifying access/ rights/ privileges to various resources. It provides information security and computer security to systems. Of course, we can control the access to users as well. The authorisation process decides whether access should be given or denied.","sidebar":"docs"},"lowcode/core":{"id":"lowcode/core","title":"Core","description":"Core is the built-in app that provides the default functionality for your App. There are some common data types required for different applications. Core has built-in those types for you.","sidebar":"docs"},"lowcode/create-serverless":{"id":"lowcode/create-serverless","title":"Create Serverless Function","description":"OpenWhisk requires a JSON object as output. Hence, serverless function cannot return arrays. It must return an object at the top level which can have arrays inside it.","sidebar":"docs"},"lowcode/createdata":{"id":"lowcode/createdata","title":"Create Data","description":"\u201cCreate\u201d functions as a mutation to insert data in the table. After creating an instance, you may want to add data to it. Just one function does the job of inserting and updating data, i.e. upsert.","sidebar":"docs"},"lowcode/crud":{"id":"lowcode/crud","title":"CRUD APIs","description":"CRUD is the acronym commonly used for Create, Read, Update, Delete. Hypi automatically generates CRUD API from the app\u2019s schema.","sidebar":"docs"},"lowcode/deletedata":{"id":"lowcode/deletedata","title":"Delete Data","description":"The hypi platform supports two types of deletions. The first one is a Soft Delete that does not actually delete data but \u2018marks\u2019 it as deleted. Use the trash function to perform a soft delete. You may reverse the soft delete to restore data.","sidebar":"docs"},"lowcode/faq":{"id":"lowcode/faq","title":"Hypi FAQs","description":"Q. What is Hypi?","sidebar":"docs"},"lowcode/fileupload":{"id":"lowcode/fileupload","title":"File Upload","description":"Many applications need to upload the file to the backend. Hypi provides a simple API to do so!","sidebar":"docs"},"lowcode/get-involved":{"id":"lowcode/get-involved","title":"Get Involved with Hypi!","description":"Hypi will get better with people\u2019s involvement. We invite you to participate as per your interests. There are various ways to participate!","sidebar":"docs"},"lowcode/get-started":{"id":"lowcode/get-started","title":"Get Started","description":"Hypi platform is easy to use! A quick way to get started using the platform is to skim through references below. Also try out examples on usage of Hypi APIs in GraphQL editor.","sidebar":"docs"},"lowcode/glossary":{"id":"lowcode/glossary","title":"Glossary","description":"Aggregation: Performs a calculation on a set of values and returns a single value","sidebar":"docs"},"lowcode/gql-crud-tutorial":{"id":"lowcode/gql-crud-tutorial","title":"Hypi GraphQL CRUD Tutorial","description":"In this tutorial, let\'s check how to use GraphQL APIs to perform CRUD operations on your app.","sidebar":"docs"},"lowcode/gql-interfaces":{"id":"lowcode/gql-interfaces","title":"GraphQL Interfaces","description":"GraphQL supports interfaces similar to other type systems. Interfaces are abstract types that hold a certain set of fields. A type must include these fields to implement the interface.","sidebar":"docs"},"lowcode/gql-introduction":{"id":"lowcode/gql-introduction","title":"GraphQL Introduction","description":"What is GraphQL?","sidebar":"docs"},"lowcode/gql-mutations":{"id":"lowcode/gql-mutations","title":"GraphQL Mutations","description":"As a complete platform, we focus not just on querying but creating and updating your app\'s data. Similar to queries, mutations must also have data/fields selected. You can ask for any nested fields. This is useful for fetching the new state of an object after an update.","sidebar":"docs"},"lowcode/gql-queries":{"id":"lowcode/gql-queries","title":"GraphQL Queries","description":"Every GraphQL schema has a root type for both queries and mutations. The query type defines GraphQL operations that retrieve data from the server.","sidebar":"docs"},"lowcode/gql-schema-types":{"id":"lowcode/gql-schema-types","title":"GraphQL Schema and Types","description":"On this page, you\'ll learn all you need to know about the GraphQL type system and GraphQL Schema to define the data. Since GraphQL can be used with any backend framework or programming language, we\'ll stay away from implementation-specific details and talk only about the concepts.","sidebar":"docs"},"lowcode/graphql":{"id":"lowcode/graphql","title":"GraphQL Overview","description":"Hypi\'s low code APIs are based on GraphQL\'s strongly typed query language. It is not essential to know GraphQL to use Hypi APIs. However, it is good to have basic understanding of GraphQL.","sidebar":"docs"},"lowcode/hypi-angular":{"id":"lowcode/hypi-angular","title":"Hypi + Angular","description":"Hypi is an ultra-flexible community-driven app development platform. You can use Hypi with any front-end framework of choice like Angular, React, Vue js, native frameworks etc. Hypi is designed from the ground up to make it easy to build scalable data-driven applications, web services and components that fetch data with GraphQL and REST easily. To get started and for demonstration purposes, we are going to integrate Hypi with Angular. You can incorporate Hypi with any other framework.","sidebar":"docs"},"lowcode/hypi-cli-angular":{"id":"lowcode/hypi-cli-angular","title":"Use Hypi in an Angular Project","description":"In this guide, we will access Hypi APIs from the Angular project using the Hypi CLI.","sidebar":"docs"},"lowcode/hypi-cli-flutter":{"id":"lowcode/hypi-cli-flutter","title":"Use Hypi in a Flutter Project","description":"Flutter is Google\u2019s UI toolkit for building beautiful, natively compiled applications for\xa0mobile,\xa0web, and\xa0desktop\xa0from a single codebase. In this guide, we will showcase how to import the Hypi package within the Flutter project using Hypi CLI. After the import, you may use Hypi functionalities to build Flutter Applications.","sidebar":"docs"},"lowcode/hypi-cli-intro":{"id":"lowcode/hypi-cli-intro","title":"Hypi CLI Overview","description":"Hypi has its own Command Line Interface(CLI) to facilitate using Hypi APIs with Client Applications. Instead of making an HTTP request to Hypi Endpoint, developers can include Hypi as a part of their applications.","sidebar":"docs"},"lowcode/hypi-cli-react":{"id":"lowcode/hypi-cli-react","title":"Use Hypi in a ReactJS Project","description":"In this guide, we will access Hypi APIs from the React Typescript project using the Hypi CLI.","sidebar":"docs"},"lowcode/hypi-cli-vuejs-composition":{"id":"lowcode/hypi-cli-vuejs-composition","title":"Use Hypi in VueJS Composition Project","description":"In this guide, we will access Hypi APIs inside the VueJS version 3 TypeScript app using the Hypi CLI.","sidebar":"docs"},"lowcode/hypi-cli-vuejs-smartqueries":{"id":"lowcode/hypi-cli-vuejs-smartqueries","title":"Use Hypi in VueJS Smart Queries Project","description":"In this guide, we will access Hypi APIs inside the VueJS version 2 TypeScript app with smart queries using the Hypi CLI.","sidebar":"docs"},"lowcode/hypi-directives":{"id":"lowcode/hypi-directives","title":"Hypi Directives","description":"A directive allows you to customise the behaviour of your data model. Hypi\'s built-in directives allow you to tell Hypi how to interact with your fields. For example, if you want to have some customisation like checking the lengths of String or Array fields or applying past and future date settings, you may do so using the directives provided by Hypi.","sidebar":"docs"},"lowcode/hypiobject":{"id":"lowcode/hypiobject","title":"Magic Hypi Object","description":"We like simple and automated things in the world of programming. One such thing is Magic Hypi Object. You will not create it and still, you will get it. That\u2019s why it\u2019s a magic object! It automatically gets attached to every data type. It allows the programmer to do pretty powerful things.","sidebar":"docs"},"lowcode/introduction":{"id":"lowcode/introduction","title":"Welcome to Hypi!","description":"Hypi is a low code platform for developing lightning-fast, scalable data-driven applications. Want to populate the front end of your application with data without much coding? This low-code backend-as-a-service will do the work for you. Hypi works as a reusable component that helps to minimize efforts to build applications.","sidebar":"docs"},"lowcode/mathsapi":{"id":"lowcode/mathsapi","title":"Maths APIs","description":"Mathematical functions perform standard calculations on the data. Users may perform these calculations on the client-side. However, if more than two clients are performing mathematical operations on the data at the same time, it may lead to data loss or errors. To prevent this scenario, Hypi Maths APIs are designed.","sidebar":"docs"},"lowcode/mdx":{"id":"lowcode/mdx","title":"Powered by MDX","description":"You can write JSX and use React components within your Markdown thanks to MDX."},"lowcode/nodejs-client-library":{"id":"lowcode/nodejs-client-library","title":"NodeJS Client Library","description":"Using NodeJS Client Library, integrate Hypi APIs effortlessly into the NodeJS based serverless functions. Download and install NPM NodeJS library and start using Hypi APIs.","sidebar":"docs"},"lowcode/oauth2login":{"id":"lowcode/oauth2login","title":"OAuth2 Login","description":"OAuth2 Authorization framework enables a third-party application to obtain limited access to an external Http service on behalf of the resource owner by orchestrating an interaction between the resource owner and the Http service. On Hypi, application developers can utilize OAuth2 functionality out of the box. Hypi supports a rich set of Http services such as Facebook, Google, Github, Twitter, and more. The following section explains how to integrate OAuth2 functionality in your apps.","sidebar":"docs"},"lowcode/openwhisk-actions":{"id":"lowcode/openwhisk-actions","title":"OpenWhisk Actions","description":"Actions are stateless functions that run on the OpenWhisk platform. For example, an action can","sidebar":"docs"},"lowcode/openwhisk-alarms":{"id":"lowcode/openwhisk-alarms","title":"Alarm Package","description":"Apache OpenWhisk Alarm Package","sidebar":"docs"},"lowcode/openwhisk-annotations":{"id":"lowcode/openwhisk-annotations","title":"Annotations","description":"OpenWhisk actions, triggers, rules and packages (collectively referred to as assets) may be decorated with annotations. Annotations are attached to assets just like parameters with a key that defines a name and value that defines the value. It is convenient to set them from the command line interface (CLI) via --annotation or -a for short.","sidebar":"docs"},"lowcode/openwhisk-cli":{"id":"lowcode/openwhisk-cli","title":"OpenWhisk CLI","description":"What is OpenWhisk","sidebar":"docs"},"lowcode/openwhisk-conductors":{"id":"lowcode/openwhisk-conductors","title":"Conductors","description":"Conductor actions make it possible to build and invoke a series of actions, similar to sequences. However, whereas the components of a sequence action must be specified before invoking the sequence, conductor actions can decide the series of actions to invoke at run time.","sidebar":"docs"},"lowcode/openwhisk-github":{"id":"lowcode/openwhisk-github","title":"Using the GitHub Package","description":"The /whisk.system/github package offers a convenient way to use the GitHub APIs.","sidebar":"docs"},"lowcode/openwhisk-packages":{"id":"lowcode/openwhisk-packages","title":"Packages","description":"In OpenWhisk, you can use packages to bundle together a set of related actions, and share them with others.","sidebar":"docs"},"lowcode/openwhisk-parameters":{"id":"lowcode/openwhisk-parameters","title":"Parameters","description":"When working with serverless actions, data is supplied by adding parameters to the actions; these are in the parameter declared as an argument to the main serverless function. All data arrives this way and the values can be set in a few different ways. The first option is to supply parameters when an action or package is created (or updated). This approach is useful for data that stays the same on every execution, equivalent to environment variables on other platforms, or for default values that might be overridden at invocation time. The second option is to supply parameters when the action is invoked - and this approach will override any parameters already set.","sidebar":"docs"},"lowcode/openwhisk-sequences":{"id":"lowcode/openwhisk-sequences","title":"Action Sequences","description":"A powerful feature of the OpenWhisk programming model is the ability to compose actions together. A common composition is a sequence of actions, where the result of one action becomes the input to the next action in the sequence.","sidebar":"docs"},"lowcode/openwhisk-slack":{"id":"lowcode/openwhisk-slack","title":"Using the Slack Package","description":"The /whisk.system/slack package offers a convenient way to use the Slack APIs.","sidebar":"docs"},"lowcode/openwhisk-triggers":{"id":"lowcode/openwhisk-triggers","title":"Triggers and Rules","description":"OpenWhisk triggers and rules bring event-driven capabilities to the platform. Events from external and internal event sources are channeled through a trigger, and rules allow your actions to react to these events.","sidebar":"docs"},"lowcode/openwhisk-webactions":{"id":"lowcode/openwhisk-webactions","title":"Web Actions","description":"Web actions are OpenWhisk actions annotated to quickly enable you to build web based applications. This allows you to program backend logic which your web application can access anonymously without requiring an OpenWhisk authentication key. It is up to the action developer to implement their own desired authentication and authorization (i.e. OAuth flow).","sidebar":"docs"},"lowcode/openwhisk-websocket":{"id":"lowcode/openwhisk-websocket","title":"Using the WebSocket Package","description":"The /whisk.system/websocket package offers a convenient way post messages to a WebSocket.","sidebar":"docs"},"lowcode/overview":{"id":"lowcode/overview","title":"Hypi Overview","description":"Certain concepts are the backbone of Hypi. It is better to know them. Let\'s take an overview of these concepts.","sidebar":"docs"},"lowcode/password-reminder":{"id":"lowcode/password-reminder","title":"Password Reminder","description":"Sometimes users forget the password for applications. Hence, applications need to provide the password reminder utility to their users. Hypi facilitates password reminder functionality to its client.","sidebar":"docs"},"lowcode/react-todo-app":{"id":"lowcode/react-todo-app","title":"A React ToDo App using low code API\u2019s of Hypi","description":"Hypi\u2019s low code APIs can be used to develop various kinds of data-driven applications.","sidebar":"docs"},"lowcode/readdata":{"id":"lowcode/readdata","title":"Read Data","description":"Read the inserted data by using query functions. get and find are the two functions that return the data. If you need a single record, use the get function. For getting multiple records, use the find function.","sidebar":"docs"},"lowcode/realtime-db":{"id":"lowcode/realtime-db","title":"Realtime database","description":"Hypi facilitates real-time monitoring of the database using Subscription method.","sidebar":"docs"},"lowcode/references":{"id":"lowcode/references","title":"Creating and removing one-to-one and one-to-many references","description":"Hypi can provide one-to-one or one-to-many references for tables.","sidebar":"docs"},"lowcode/rest-apis":{"id":"lowcode/rest-apis","title":"RESTful APIs","description":"Hypi platform provides APIs with multiple flavors that suit different developers\' tastes. The RESTful APIs are no different and at the same time, they were redesigned to abide by the HATEOS code of conduct for better semantics and easier interpretation.","sidebar":"docs"},"lowcode/scalars":{"id":"lowcode/scalars","title":"Scalars","description":"A GraphQL object type has a name and cont","sidebar":"docs"},"lowcode/scheduled-function":{"id":"lowcode/scheduled-function","title":"ScheduledFunction","description":"Hypi\'s ScheduledFunction helps to schedule a function to run automatically. User Defined Functions or Serverless Functions can be automated to run at a particular time or on a recurring basis.","sidebar":"docs"},"lowcode/serverless":{"id":"lowcode/serverless","title":"Serverless Overview","description":"Serverless technology is a means of adding custom behaviour without having to worry too much about infrastructure, deployment, or maintenance. Serverless functions are single-purpose, programmatic functions that are hosted by cloud computing platforms.","sidebar":"docs"},"lowcode/serverlessfunction":{"id":"lowcode/serverlessfunction","title":"Serverless Function","description":"Serverless technology are a means of adding custom behaviour without having to worry too much about infrastructure, deployment or maintenance. Serverless functions are single purpose, programmatic funcions that are hosted by cloud computing platforms. You may access serverless functions from Hypi platform. You need to have a docker image of the function created on the platform like OpenFaaS."},"lowcode/style":{"id":"lowcode/style","title":"Style Guide","description":"You can write content using GitHub-flavored Markdown syntax."},"lowcode/time-series-aggregations":{"id":"lowcode/time-series-aggregations","title":"Timeseries Aggregations with Date Granularity","description":"Timeseries Aggregations can be performed on the dateTime field. So, you may group the records based upon thedateTimefield and perform aggregations on them. Hypi object has the dateTime fields likehypicreated or hypiupdated. You may use these fields for timeseries aggregations.","sidebar":"docs"},"lowcode/triggers":{"id":"lowcode/triggers","title":"Triggers","description":"In many databases and some other systems, it is possible to define a trigger that is executed before or after an event has happened. A trigger is used to maintain the integrity of the data. Or it can be used to automate a response to any event. For example, sending a welcome email when a new customer adds to the database, validating the data before creating an entry, etc.","sidebar":"docs"},"lowcode/tutorials":{"id":"lowcode/tutorials","title":"Tutorials Overview","description":"Tutorials are written to guide you to achieve a specific task with the Hypi platform.","sidebar":"docs"},"lowcode/ui-add-dependencies":{"id":"lowcode/ui-add-dependencies","title":"Add Dependencies","description":"A Hypi App may have a functional dependency on one or more apps. Borrow the functionalities from other apps using the Dependencies feature. When you add an app as a dependency, your Hypi app will inherit its behavior.","sidebar":"docs"},"lowcode/ui-add-environment-var":{"id":"lowcode/ui-add-environment-var","title":"Add Environment Variables","description":"1. To add Environment variables, click on Settings under the Versions.","sidebar":"docs"},"lowcode/ui-create-app":{"id":"lowcode/ui-create-app","title":"Create App","description":"1. Register on https://hypi.io/ using an email id.","sidebar":"docs"},"lowcode/ui-create-instance":{"id":"lowcode/ui-create-instance","title":"Create Instance","description":"1. An instance is an isolated copy of your app. Data stored in the database at a particular time is called an instance of a database. Think of an app as a template and an instance as a deployed version of that template. A release may have one or more instances. To create an instance click +Create Instance under the API Instances.","sidebar":"docs"},"lowcode/ui-create-release":{"id":"lowcode/ui-create-release","title":"Create Release","description":"1. You may create independent releases for different stages of the Software Development Life Cycle. Click on +New Release + or Create a Release under the Versions.","sidebar":"docs"},"lowcode/ui-create-table-gse":{"id":"lowcode/ui-create-table-gse","title":"Create a table using GraphQL Schema Editor","description":"1. Apart from Visual Data Builder, you may create a table manually using GraphQL Schema Editor. Click on Schema Editor under Versions.","sidebar":"docs"},"lowcode/ui-create-table-vb":{"id":"lowcode/ui-create-table-vb","title":"Create a table using Visual Builder","description":"1. Click Visual Builder under Versions to add Tables to the schema.","sidebar":"docs"},"lowcode/ui-data-migration":{"id":"lowcode/ui-data-migration","title":"Data Migration","description":"Hypi supports the migration of data from one instance to another instance. You may further change the data types of fields or add new fields with data migration support. Migration makes data available from one instance to the other.","sidebar":"docs"},"lowcode/ui-deprecate-publish":{"id":"lowcode/ui-deprecate-publish","title":"Publish / Deprecate Release","description":"1. There may be three types of releases; Draft, Deprecated, Published. You may see these different types as highlighted.","sidebar":"docs"},"lowcode/ui-gql-config":{"id":"lowcode/ui-gql-config","title":"GraphQL configuration of an Instance","description":"1. Go to the API Instances tab. Select an Instance from the list. Select the Settings to check the GraphQL configurations.","sidebar":"docs"},"lowcode/ui-gql-playground":{"id":"lowcode/ui-gql-playground","title":"GraphQL Playground","description":"1. On the Hypi platform, you can execute various GraphQL methods with GraphQL playground. Click on API Instances. Select the instance from the list of instances. Select Playground tab.","sidebar":"docs"},"lowcode/ui-instance-api-config":{"id":"lowcode/ui-instance-api-config","title":"API configurations of an Instance","description":"1. Select any Instance under the API Instances tab. Click on Configuration. On the left side, you can see list of the Environment Settings. The environment settings saved under the Release are reflected here.","sidebar":"docs"},"lowcode/ui-real-time-streams":{"id":"lowcode/ui-real-time-streams","title":"Real-time Input Streams","description":"1. Under the Data option of an API instance, you can find Streaming. Here, you can retrieve the data from the Apache Pulsar cluster.","sidebar":"docs"},"lowcode/ui-view-instance":{"id":"lowcode/ui-view-instance","title":"View Instance","description":"1. You can see the list of Instances under the AP Instances. Click on the domain name to get the details.","sidebar":"docs"},"lowcode/undo-redo":{"id":"lowcode/undo-redo","title":"Undo / Redo APIs","description":"Hypi supports the Versioning of saved data on the object level. You can roll back data to a specific version. It is also possible to restore the rolled-back data.","sidebar":"docs"},"lowcode/updatedata":{"id":"lowcode/updatedata","title":"Update Data","description":"To perform an update for a created object, you can use the upsert function in the same format. The only difference is we need to pass on created id value to locate the object. Notice that we have passed on the same id values from hypi objects to the update information of two different authors. If the update is successful, the same id values are returned.","sidebar":"docs"},"lowcode/use-serverless":{"id":"lowcode/use-serverless","title":"Use Serverless Function","description":"OpenWhisk requires a JSON object as output. Hence, serverless function cannot return arrays. It must return an object at the top level which can have arrays inside it.","sidebar":"docs"},"lowcode/userdefinedfunctions":{"id":"lowcode/userdefinedfunctions","title":"User Defined Functions","description":"User Defined functions provide a lightweight way to implement custom behaviour outside of what Hypi offers. The functions are executed on the same server where the query gets processed.","sidebar":"docs"},"lowcode/webhooks":{"id":"lowcode/webhooks","title":"Webhooks","description":"Webhooks provide a way for external APIs to notify you when some event has occurred in their system. That is a typical use case for this API.","sidebar":"docs"},"properties-column-row":{"id":"properties-column-row","title":"Column/Row/Flex Properties","description":"Column, Row, and Flex widgets accommodate multiple widgets. Column arranges the child widgets vertically and Row arranges the child widgets horizontally. Flex gives you flexibility to choose horizontal or vertical arrangement. Positions of the child widgets can be adjusted using the below properties. The same properties apply to all the three widgets.","sidebar":"docs"},"properties-container":{"id":"properties-container","title":"Container Properties","description":"Container is useful to style the basic widgets. It provides a wide range of features.","sidebar":"docs"},"properties-text":{"id":"properties-text","title":"Text Properties","description":"Text is an important widget that is visible and common. It can be the child widget of other visible widgets like Button, Circle Avatar, etc. Properties of the Text content can be changed to provide a different visual appearance.","sidebar":"docs"},"stories-action":{"id":"stories-action","title":"Action","description":"After adding the User, the next step is adding probable actions by the User.","sidebar":"docs"},"stories-data-tables":{"id":"stories-data-tables","title":"Data Tables - Overview","description":"After adding User stories, you will have an idea of what kind of data needs to be stored. Based on that, you can design your data models. From the Stories board, you can go to Tables to add your data models/tables.","sidebar":"docs"},"stories-outcome":{"id":"stories-outcome","title":"Outcome","description":"Every action has an outcome. When you add an action, a box to add an outcome would get appended in the flow diagram automatically.","sidebar":"docs"},"stories-users":{"id":"stories-users","title":"Users","description":"While designing an application, it is important to know the details or background of the end-users. Hypi Tink saves this information. It also helps to gain insights in to the personality of an end-user. These insights would help you to design the functionalities of the application.","sidebar":"docs"},"widget-advance":{"id":"widget-advance","title":"Advance","description":"App Bar","sidebar":"docs"},"widget-basic":{"id":"widget-basic","title":"Basic Widgets","description":"Basic widgets are visible and common widgets that are used to build user interfaces of various kinds of applications. You may be knowing the form and functions of these widgets. However, providing here a brief explanation of these widgets for quick reference.","sidebar":"docs"},"widget-forms":{"id":"widget-forms","title":"Forms","description":"Form widgets are interactive widgets that process user inputs.","sidebar":"docs"},"widget-groups":{"id":"widget-groups","title":"Widget Groups","description":"Hypi Tink divides Widgets into different groups. Let\'s check these groups.","sidebar":"docs"},"widget-layout":{"id":"widget-layout","title":"Layout Widgets","description":"Layout widgets are invisible. If you have basic widgets with you, how do you place them appropriately over the screen? That\'s when Layout widgets come to the picture!","sidebar":"docs"},"widget-list-view":{"id":"widget-list-view","title":"List","description":"ListView","sidebar":"docs"},"widget-properties":{"id":"widget-properties","title":"Common Widget Properties","description":"Certain properties are common to the widgets. And most of these properties need no detailed explanation. However, if you find something incomprehensible, you may check this reference.","sidebar":"docs"}}}')}}]);