"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6810],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),h=c(n),m=i,d=h["".concat(p,".").concat(m)]||h[m]||u[m]||o;return n?a.createElement(d,r(r({ref:t},s),{},{components:n})):a.createElement(d,r({ref:t},s))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=h;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var c=2;c<o;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},6042:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return h}});var a=n(87462),i=n(63366),o=(n(67294),n(3905)),r=["components"],l={id:"actions-python",title:"Python actions",sidebar_label:"Python actions",slug:"/lowcode/actions-python"},p=void 0,c={unversionedId:"lowcode/actions-python",id:"lowcode/actions-python",title:"Python actions",description:"OpenWhisk requires a JSON object as output. Hence, serverless function cannot return arrays. It must return an object at the top level which can have arrays inside it.",source:"@site/content/lowcode/actions-python.md",sourceDirName:"lowcode",slug:"/lowcode/actions-python",permalink:"/docs/lowcode/actions-python",editUrl:"https://github.com/hypi-universe/docs/edit/master/content/lowcode/actions-python.md",tags:[],version:"current",frontMatter:{id:"actions-python",title:"Python actions",sidebar_label:"Python actions",slug:"/lowcode/actions-python"},sidebar:"docs",previous:{title:"JavaScript actions",permalink:"/docs/lowcode/actions-nodejs"},next:{title:"Java actions",permalink:"/docs/lowcode/actions-java"}},s=[{value:"Packaging Python actions in zip files",id:"packaging-python-actions-in-zip-files",children:[],level:3},{value:"Packaging Python actions with a virtual environment in zip files",id:"packaging-python-actions-with-a-virtual-environment-in-zip-files",children:[],level:3},{value:"Python 3 actions",id:"python-3-actions",children:[],level:3}],u={toc:s};function h(e){var t=e.components,n=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"OpenWhisk requires a JSON object as output. Hence, serverless function cannot return arrays. It must return an object at the top level which can have arrays inside it."))),(0,o.kt)("p",null,"The process of creating Python actions is similar to that of ",(0,o.kt)("a",{parentName:"p",href:"/docs/lowcode/openwhisk-actions#the-basics"},"other actions"),".\nThe following sections guide you through creating and invoking a single Python action, and demonstrate how to bundle multiple Python files and third party dependencies."),(0,o.kt)("p",null,"An example action Python action is simply a top-level function. For example, create a file called ",(0,o.kt)("inlineCode",{parentName:"p"},"hello.py")," with the following source code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def main(args):\n    name = args.get("name", "stranger")\n    greeting = "Hello " + name + "!"\n    print(greeting)\n    return {"greeting": greeting}\n')),(0,o.kt)("p",null,"Python actions always consume a dictionary and produce a dictionary.\nThe entry method for the action is ",(0,o.kt)("inlineCode",{parentName:"p"},"main")," by default but may be specified explicitly when creating\nthe action with the ",(0,o.kt)("inlineCode",{parentName:"p"},"wsk")," CLI using ",(0,o.kt)("inlineCode",{parentName:"p"},"--main"),", as with any other action type."),(0,o.kt)("p",null,"You can create an OpenWhisk action called ",(0,o.kt)("inlineCode",{parentName:"p"},"helloPython")," from this function as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"hypi wsk action create helloPython hello.py\n")),(0,o.kt)("p",null,"The CLI automatically infers the type of the action from the source file extension.\nFor ",(0,o.kt)("inlineCode",{parentName:"p"},".py")," source files, the action runs using a Python 3.6 runtime."),(0,o.kt)("p",null,"Action invocation is the same for Python actions as it is for any other actions:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"hypi wsk action invoke --result helloPython --param name World\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'  {\n      "greeting": "Hello World!"\n  }\n')),(0,o.kt)("p",null,"Find out more about parameters in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/lowcode/openwhisk-parameters"},"Working with parameters")," section."),(0,o.kt)("h3",{id:"packaging-python-actions-in-zip-files"},"Packaging Python actions in zip files"),(0,o.kt)("p",null,"You can package a Python action and dependent modules in a zip file.\nThe filename of the source file containing the entry point (e.g., ",(0,o.kt)("inlineCode",{parentName:"p"},"main"),") must be ",(0,o.kt)("inlineCode",{parentName:"p"},"__main__.py"),".\nFor example, to create an action with a helper module called ",(0,o.kt)("inlineCode",{parentName:"p"},"helper.py"),", first create an archive containing your source files:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"zip -r helloPython.zip __main__.py helper.py\n")),(0,o.kt)("p",null,"and then create the action:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"hypi wsk action create helloPython --kind python:3 helloPython.zip\n")),(0,o.kt)("h3",{id:"packaging-python-actions-with-a-virtual-environment-in-zip-files"},"Packaging Python actions with a virtual environment in zip files"),(0,o.kt)("p",null,"Another way of packaging Python dependencies is using a virtual environment (",(0,o.kt)("inlineCode",{parentName:"p"},"virtualenv"),"). This allows you to link additional packages that may be installed via ",(0,o.kt)("a",{parentName:"p",href:"https://packaging.python.org/installing/"},(0,o.kt)("inlineCode",{parentName:"a"},"pip"))," for example.\nTo ensure compatibility with the OpenWhisk container, package installations inside a virtualenv must be done in the target environment.  So the docker image ",(0,o.kt)("inlineCode",{parentName:"p"},"openwhisk/python3action")," should be used to create a virtualenv directory for your action."),(0,o.kt)("p",null,"As with basic zip file support, the name of the source file containing the main entry point must be ",(0,o.kt)("inlineCode",{parentName:"p"},"__main__.py"),". In addition, the virtualenv directory must be named ",(0,o.kt)("inlineCode",{parentName:"p"},"virtualenv"),".\nBelow is an example scenario for installing dependencies, packaging them in a virtualenv, and creating a compatible OpenWhisk action."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Given a ",(0,o.kt)("inlineCode",{parentName:"li"},"requirements.txt")," file that contains the ",(0,o.kt)("inlineCode",{parentName:"li"},"pip")," modules and versions to install, run the following to install the dependencies and create a virtualenv using a compatible Docker image:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},' docker run --rm -v "$PWD:/tmp" openwhisk/python3action bash \\\n   -c "cd tmp && virtualenv virtualenv && source virtualenv/bin/activate && pip install -r requirements.txt"\n')),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Archive the virtualenv directory and any additional Python files:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"}," zip -r helloPython.zip virtualenv __main__.py\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Create the action:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"hypi wsk action create helloPython --kind python:3 helloPython.zip\n")),(0,o.kt)("h3",{id:"python-3-actions"},"Python 3 actions"),(0,o.kt)("p",null,"Python 3 actions are executed using Python 3.6.1. This is the default runtime for Python actions, unless you specify the ",(0,o.kt)("inlineCode",{parentName:"p"},"--kind")," flag when creating or updating an action.\nThe following packages are available for use by Python actions, in addition to the Python 3.6 standard libraries."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"aiohttp v1.3.3"),(0,o.kt)("li",{parentName:"ul"},"appdirs v1.4.3"),(0,o.kt)("li",{parentName:"ul"},"asn1crypto v0.21.1"),(0,o.kt)("li",{parentName:"ul"},"async-timeout v1.2.0"),(0,o.kt)("li",{parentName:"ul"},"attrs v16.3.0"),(0,o.kt)("li",{parentName:"ul"},"beautifulsoup4 v4.5.1"),(0,o.kt)("li",{parentName:"ul"},"cffi v1.9.1"),(0,o.kt)("li",{parentName:"ul"},"chardet v2.3.0"),(0,o.kt)("li",{parentName:"ul"},"click v6.7"),(0,o.kt)("li",{parentName:"ul"},"cryptography v1.8.1"),(0,o.kt)("li",{parentName:"ul"},"cssselect v1.0.1"),(0,o.kt)("li",{parentName:"ul"},"Flask v0.12"),(0,o.kt)("li",{parentName:"ul"},"gevent v1.2.1"),(0,o.kt)("li",{parentName:"ul"},"greenlet v0.4.12"),(0,o.kt)("li",{parentName:"ul"},"httplib2 v0.9.2"),(0,o.kt)("li",{parentName:"ul"},"idna v2.5"),(0,o.kt)("li",{parentName:"ul"},"itsdangerous v0.24"),(0,o.kt)("li",{parentName:"ul"},"Jinja2 v2.9.5"),(0,o.kt)("li",{parentName:"ul"},"kafka-python v1.3.1"),(0,o.kt)("li",{parentName:"ul"},"lxml v3.6.4"),(0,o.kt)("li",{parentName:"ul"},"MarkupSafe v1.0"),(0,o.kt)("li",{parentName:"ul"},"multidict v2.1.4"),(0,o.kt)("li",{parentName:"ul"},"packaging v16.8"),(0,o.kt)("li",{parentName:"ul"},"parsel v1.1.0"),(0,o.kt)("li",{parentName:"ul"},"pyasn1 v0.2.3"),(0,o.kt)("li",{parentName:"ul"},"pyasn1-modules v0.0.8"),(0,o.kt)("li",{parentName:"ul"},"pycparser v2.17"),(0,o.kt)("li",{parentName:"ul"},"PyDispatcher v2.0.5"),(0,o.kt)("li",{parentName:"ul"},"pyOpenSSL v16.2.0"),(0,o.kt)("li",{parentName:"ul"},"pyparsing v2.2.0"),(0,o.kt)("li",{parentName:"ul"},"python-dateutil v2.5.3"),(0,o.kt)("li",{parentName:"ul"},"queuelib v1.4.2"),(0,o.kt)("li",{parentName:"ul"},"requests v2.11.1"),(0,o.kt)("li",{parentName:"ul"},"Scrapy v1.1.2"),(0,o.kt)("li",{parentName:"ul"},"service-identity v16.0.0"),(0,o.kt)("li",{parentName:"ul"},"simplejson v3.8.2"),(0,o.kt)("li",{parentName:"ul"},"six v1.10.0"),(0,o.kt)("li",{parentName:"ul"},"Twisted v16.4.0"),(0,o.kt)("li",{parentName:"ul"},"w3lib v1.17.0"),(0,o.kt)("li",{parentName:"ul"},"Werkzeug v0.12"),(0,o.kt)("li",{parentName:"ul"},"yarl v0.9.8"),(0,o.kt)("li",{parentName:"ul"},"zope.interface v4.3.3")),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Large portions of this page is copied from the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/openwhisk/tree/master/docs"},"Apache OpenWhisk documentation")," on April 23rd 2021 - where there have been customisations to match Hypi's deployment this has been noted. Apache OpenWhisk and the Apache name are the property of the Apache Foundation and licensed under the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/openwhisk/blob/master/LICENSE.txt"},"Apache V2 license")," ."))))}h.isMDXComponent=!0}}]);