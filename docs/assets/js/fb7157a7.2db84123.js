"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1906],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),p=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,k=u["".concat(d,".").concat(m)]||u[m]||c[m]||o;return n?r.createElement(k,i(i({ref:t},s),{},{components:n})):r.createElement(k,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3250:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={id:"undo-redo",title:"Undo / Redo APIs",sidebar_label:"Undo / Redo APIs",slug:"/lowcode/undo-redo"},d=void 0,p={unversionedId:"lowcode/undo-redo",id:"lowcode/undo-redo",title:"Undo / Redo APIs",description:"Hypi supports the Versioning of saved data on the object level. You can roll back data to a specific version. It is also possible to restore the rolled-back data.",source:"@site/content/lowcode/undo-redo.md",sourceDirName:"lowcode",slug:"/lowcode/undo-redo",permalink:"/docs/lowcode/undo-redo",editUrl:"https://github.com/hypi-universe/docs/edit/master/content/lowcode/undo-redo.md",tags:[],version:"current",frontMatter:{id:"undo-redo",title:"Undo / Redo APIs",sidebar_label:"Undo / Redo APIs",slug:"/lowcode/undo-redo"},sidebar:"docs",previous:{title:"Hypi Directives",permalink:"/docs/lowcode/hypi-directives"},next:{title:"User Defined Functions",permalink:"/docs/lowcode/user-defined-function"}},s=[{value:"@versioned",id:"versioned",children:[],level:3},{value:"undo",id:"undo",children:[],level:3},{value:"redo",id:"redo",children:[],level:3}],c={toc:s};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Hypi supports the ",(0,o.kt)("strong",{parentName:"p"},"Versioning")," of saved data on the object level. You can roll back data to a specific version. It is also possible to restore the rolled-back data."),(0,o.kt)("h3",{id:"versioned"},"@versioned"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@versioned")," directive tracks the version of each object that holds a data of certain type . Declare the data type using the ",(0,o.kt)("inlineCode",{parentName:"p"},"@versioned")," directive as below."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"type VersionedObj @versioned\xa0{\n data:\xa0String \n}\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"version")," field in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/lowcode/magic-hypi-object"},"hypi")," object automatically generates a version for each object created for a data type.  Or you can create an object with a unique version number."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'mutation {\n  upsert(values: { VersionedObj: { data: "abc", hypi: { version: 1 } } }) {\n    id\n  }\n}\n#result\n{\n  "data": {\n    "upsert": [\n      {\n        "id": "01GCBVD8J5Y9H94HC23CTWR8J7"\n      }\n    ]\n  }\n}\n')),(0,o.kt)("p",null,"Update the object data by changing the version number. The version number gets automatically generated if not specified."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'mutation {\n  upsert(\n    values: {\n      VersionedObj: {\n        data: "xyz"\n        hypi: { id: "01GCBVD8J5Y9H94HC23CTWR8J7", version: 2 }\n      }\n    }\n  ) {\n    id\n  }\n}\n')),(0,o.kt)("p",null,"This way ",(0,o.kt)("inlineCode",{parentName:"p"},"version")," saves different copies of the data inserted in an object. Hypi facilitates navigation through these copies or versions using ",(0,o.kt)("inlineCode",{parentName:"p"},"undo")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"redo")," functions."),(0,o.kt)("h3",{id:"undo"},"undo"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"undo")," function rolls back the data to a previous version or a specified version. Provide the object ",(0,o.kt)("inlineCode",{parentName:"p"},"hypi.id")," and data ",(0,o.kt)("inlineCode",{parentName:"p"},"type")," as parameters to the function. To roll back the data to a specific version, provide the ",(0,o.kt)("inlineCode",{parentName:"p"},"version")," number as well."),(0,o.kt)("p",null,"Let's check the ",(0,o.kt)("inlineCode",{parentName:"p"},"undo")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"undo(\n    type: String!\n    id: ID!\n    version: Long\n): Boolean\n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Example"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"type"),(0,o.kt)("td",{parentName:"tr",align:null},"Data type"),(0,o.kt)("td",{parentName:"tr",align:null},'"VersionedObj"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"id"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"hypi.id")," of the object to roll back data from"),(0,o.kt)("td",{parentName:"tr",align:null},'"01GCBVD8J5Y9H94HC23CTWR8J7"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"version"),(0,o.kt)("td",{parentName:"tr",align:null},"Version number to roll back data to. This is an optional parameter. If it isn't provided, data gets rolled back to the previous version."),(0,o.kt)("td",{parentName:"tr",align:null},"1")))),(0,o.kt)("p",null,"Let's execute the function on the data previously inserted."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'mutation {\n  undo(type: "VersionedObj", id: "01GCBVD8J5Y9H94HC23CTWR8J7", version: 1)\n}\n#result\n{\n  "data": {\n    "undo": true\n  }\n}\n')),(0,o.kt)("p",null,"Retrieving the data shows data from version 1."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  get(type: VersionedObj, id: "01gceewc1yp1wcz1j7d8p9tn2k") {\n    ... on VersionedObj {\n      hypi {\n        id\n        version\n      }\n      data\n    }\n  }\n}\n#result\n{\n  "data": {\n    "get": {\n      "hypi": {\n        "id": "01gceewc1yp1wcz1j7d8p9tn2k",\n        "version": 1\n      },\n      "data": "abc"\n    }\n  }\n}\n')),(0,o.kt)("h3",{id:"redo"},"redo"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"redo")," function restores the rolled back data. Provide the object ",(0,o.kt)("inlineCode",{parentName:"p"},"hypi.id")," and data type as parameters to the function. To restore the data to a specific version, provide the version number as well."),(0,o.kt)("p",null,"Let's check the ",(0,o.kt)("inlineCode",{parentName:"p"},"redo")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"redo(\n    type: String!\n    id: ID!\n    version: Long\n): Boolean\n")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Example"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"type"),(0,o.kt)("td",{parentName:"tr",align:null},"Data type"),(0,o.kt)("td",{parentName:"tr",align:null},'"VersionedObj"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"id"),(0,o.kt)("td",{parentName:"tr",align:null},"hypi.id of the object for which the data needs to be restored"),(0,o.kt)("td",{parentName:"tr",align:null},'"01GCBVD8J5Y9H94HC23CTWR8J7"')),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"version"),(0,o.kt)("td",{parentName:"tr",align:null},"Version number to restore data to. This is an optional parameter. If it isn't provided, data gets restored to the previous version."),(0,o.kt)("td",{parentName:"tr",align:null},"2")))),(0,o.kt)("p",null,"Let's execute the function to restore previously rolled back data."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'mutation {\n  redo(type: "VersionedObj", id: "01GCBVD8J5Y9H94HC23CTWR8J7", version: 2)\n}\n#result\n{\n  "data": {\n    "redo": true\n  }\n}\n')))}u.isMDXComponent=!0}}]);