"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[738],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),s=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=s(a),m=r,v=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return a?n.createElement(v,l(l({ref:t},c),{},{components:a})):n.createElement(v,l({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=a[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},1332:function(e,t,a){var n=a(7294);t.Z=function(e){var t=e.children,a=e.hidden,r=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:r},t)}},8515:function(e,t,a){a.d(t,{Z:function(){return c}});var n=a(7462),r=a(7294),o=a(2389),l=a(5394),i=a(6010),u="tabItem_tAz6";function s(e){var t,a,o,s=e.lazy,c=e.block,d=e.defaultValue,p=e.values,m=e.groupId,v=e.className,f=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=p?p:f.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,l.lx)(h,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===d?d:null!=(t=null!=d?d:null==(a=f.find((function(e){return e.props.default})))?void 0:a.props.value)?t:null==(o=f[0])?void 0:o.props.value;if(null!==y&&!h.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var g=(0,l.UB)(),k=g.tabGroupChoices,w=g.setTabGroupChoices,N=(0,r.useState)(y),O=N[0],T=N[1],C=[],j=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var x=k[m];null!=x&&x!==O&&h.some((function(e){return e.value===x}))&&T(x)}var D=function(e){var t=e.currentTarget,a=C.indexOf(t),n=h[a].value;n!==O&&(j(t),T(n),null!=m&&w(m,n))},E=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=C.indexOf(e.currentTarget)+1;a=C[n]||C[0];break;case"ArrowLeft":var r=C.indexOf(e.currentTarget)-1;a=C[r]||C[C.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":c},v)},h.map((function(e){var t=e.value,a=e.label,o=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:O===t?0:-1,"aria-selected":O===t,key:t,ref:function(e){return C.push(e)},onKeyDown:E,onFocus:D,onClick:D},o,{className:(0,i.Z)("tabs__item",u,null==o?void 0:o.className,{"tabs__item--active":O===t})}),null!=a?a:t)}))),s?(0,r.cloneElement)(f.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}function c(e){var t=(0,o.Z)();return r.createElement(s,(0,n.Z)({key:String(t)},e))}},8854:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return p},default:function(){return v}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),l=a(8515),i=a(1332),u=["components"],s={id:"createdata",title:"Create Data",sidebar_label:"Create Data",slug:"/lowcode/create-data"},c=void 0,d={unversionedId:"lowcode/createdata",id:"lowcode/createdata",title:"Create Data",description:"\u201cCreate\u201d functions as a mutation to insert data in the table. After creating an instance, you may want to add data to it. Just one function does the job of inserting and updating data, i.e. upsert.",source:"@site/content/lowcode/createdata.md",sourceDirName:"lowcode",slug:"/lowcode/create-data",permalink:"/docs/lowcode/create-data",editUrl:"https://github.com/hypi-universe/docs/edit/master/content/lowcode/createdata.md",tags:[],version:"current",frontMatter:{id:"createdata",title:"Create Data",sidebar_label:"Create Data",slug:"/lowcode/create-data"},sidebar:"docs",previous:{title:"CRUD APIs",permalink:"/docs/lowcode/crud"},next:{title:"Update Data",permalink:"/docs/lowcode/update-data"}},p=[],m={toc:p};function v(e){var t=e.components,a=(0,r.Z)(e,u);return(0,o.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u201cCreate\u201d functions as a mutation to insert data in the table. After creating an instance, you may want to add data to it. Just one function does the job of inserting and updating data, i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"upsert"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},"upsert (values: HypiUpsertUnion!) : [Hypi!] !\n")),(0,o.kt)("p",null,"Notice the argument \u2018values\u2019 is plural because it allows you to create or update multiple values in a single request."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Let\u2019s go through an example. ")),(0,o.kt)("p",null,"You may use the below example to insert data into an instance (Information related to Authors)\nRun ",(0,o.kt)("inlineCode",{parentName:"p"},"upsert")," GraphQL mutation in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/lowcode/ui-gql-playground"},"GraphQL Playground")," query section. Provide input data values in ",(0,o.kt)("inlineCode",{parentName:"p"},"Query variables")," section. "),(0,o.kt)("p",null,"The result can be seen in response section. ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," value from the magic hypi object gets returned, when the data gets added to the tables successfully. You can see that data goes to ",(0,o.kt)("inlineCode",{parentName:"p"},"data")," root as shown in the response. "),(0,o.kt)(l.Z,{defaultValue:"query",values:[{label:"GraphQL Query",value:"query"},{label:"Input Data",value:"data"},{label:"Response",value:"response"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"query",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},"  mutation Upsert($values: HypiUpsertInputUnion!) {\n    upsert(values: $values) {\n      id\n    }\n  }\n"))),(0,o.kt)(i.Z,{value:"data",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "values": {\n      "Author": [\n      {\n          "name": "Dan Brown",\n          "age": 56,\n          "booklist": [\n            {\n              "title": "Da Vinci Code",\n              "publication": "abc",\n              "available": true\n            },\n            {\n              "title": "The Last Symbol",\n              "publication": "pqr",\n              "available": false\n            }\n          ]\n      },\n      {\n        "name": "Paulo Coelho",\n        "age": 70,\n        "booklist": [\n            {\n              "title": "Alchemist"\n            }         \n          ]\n        }     \n      ]\n    }\n  }\n\n'))),(0,o.kt)(i.Z,{value:"response",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'  {\n    "data": {\n      "upsert": [\n        {\n          "id": "01F0DVHM26HHWS8X8X3NBRSAV6"\n        },\n        {\n          "id": "01F0DVHM2AZCGM0JSR9QRNBWZY"\n        }\n      ]\n    }\n  }\n\n')))),(0,o.kt)("p",null,"For each object i.e. author, an id gets attached automatically. In the above example, we have passed hard-coded data in the form of a query variable. While passing on the data from User Interface, you may pass the data in the form of JSON. Just add JSON data into the variable \u2018values\u2019."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Read More...")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("ul",{parentName:"div"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://hypi.dev/t/how-to-store-save-data-in-an-instance/115"},"How to store / save data in an instance"))))))}v.isMDXComponent=!0}}]);